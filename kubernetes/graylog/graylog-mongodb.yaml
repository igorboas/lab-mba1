---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-config
data:
  MONGO_INITDB_ROOT_USERNAME: admin
  MONGO_INITDB_ROOT_PASSWORD: admin
  MONGO_INITDB_DATABASE: backend

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init
data:
  init.js: |-
    db.createUser({
      user: 'backend',
      pwd: 'swordfish',
      roles: [
          {
              role: 'readWrite',
              db: 'backend',
          },
      ],
    });

    // db = new Mongo().getDB("testDB");

    db.createCollection('users', { capped: false });

    db.users.insert([
      { email: 'martin.nirtl@gmail.com', password: 'some-hashed-pw', name: 'Martin Nirtl' },
    ]);

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-graylog
  labels:
    db: mongo-graylog
spec:
  selector:
    db: mongo-graylog
  ports:
    - name: mongo-graylog
      port: 27017
      targetPort: mongo-graylog

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-graylog
  labels:
    db: mongo-graylog
    app.kubernetes.io/name: mongo-graylog
    app.kubernetes.io/version: 5.0
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: graylog
    app.kubernetes.io/managed-by: manifests
    app.kubernetes.io/created-by: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      db: mongo-graylog
  template:
    metadata:
      labels:
        db: mongo-graylog
    spec:
      containers:
        - image: mongo:5.0
          name: mongo-graylog
          resources: {}
          envFrom:
            - configMapRef:
                name: mongo-config
          ports:
            - name: mongo-graylog
              containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: init-claim
      volumes:
        - name: init-claim
          configMap:
            name: mongo-init
