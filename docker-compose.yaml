version: "2"

services:
  mongo:
    image: mongo:5.0.4
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=backend
    ports:
      - "27017:27017"
    volumes:
      - ./services/utils/mongodb/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:5.0.13
    ports:
      - "6379:6379"

  template-service:
    build: services/template-service
    command: ["-r", "./src/tracing.js", "src/index.js"]
    environment:
      - PORT=4200
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=2
    ports:
      - "4200:4200"
    volumes:
      - ./services/template-service/src:/app/src

  mail-service:
    build: services/mail-service
    command: ["-r", "./src/tracing.js", "src/index.js"]
    environment:
      - PORT=4100
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - TEMPLATE_SERVICE_GRPC=template-service:4200
      - OTEL_ENDPOINT_URL=grpc://otel-collector:4317 # The CollectorTraceExporter in Node expects the URL to only be the hostname. It will not work with /v1/traces.
      - DT_INJECTION_RULES=::EXCLUDE:ALL,,
    ports:
      - "4100:4100"
    volumes:
      - ./services/mail-service/src:/app/src

  backend:
    build: services/backend
    command: ["src/index.js"]
    environment:
      - PORT=4000
      - DB_CONNECTION_URL=mongodb://backend:swordfish@mongo:27017/backend # Use variable expansion for username and password.
      - MAIL_SERVICE_BASE_URL=http://mail-service:4100
    ports:
      - "4000:4000"
    volumes:
      - ./services/backend/src:/app/src

  # loadgen:
  #   build: services/loadgen
  #   environment:
  #     - BACKEND_BASE_URL=http://backend:4000
  #     - DT_INJECTION_RULES=::EXCLUDE:ALL,,
  #     - BACKEND_BASE_URL=http://backend:4000 teste

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    environment:
      - OTEL_ENDPOINT_URL=${DT_TENANT_BASEURL}/api/v2/otlp # Set via .env file
      - OTEL_AUTH_HEADER=Api-Token ${DT_TOKEN} # Set via .env file
    ports:
      - "8888:8888" # Prometheus metrics exposed by the collector
      # - "8889:8889"   # Prometheus exporter metrics
      - "4317:4317" # OTLP gRPC receiver
    volumes:
      - ./services/otel/config.yaml:/etc/otel-collector-config.yaml

  oneagent:
    image: dynatrace/oneagent
    command: ["--set-host-name=OpenTelemetry Demo Host", "--set-host-group=opentelemetry-demo-compose"]
    restart: unless-stopped
    privileged: true
    pid: host
    network_mode: host
  grafana:
    image: grafana/grafana-oss:8.3.4
    environment:
      - ONEAGENT_INSTALLER_SCRIPT_URL=${DT_TENANT_BASEURL}/api/v1/deployment/installer/agent/${OS_TYPE}/default/latest # Set via .env file
      - ONEAGENT_INSTALLER_DOWNLOAD_TOKEN=${DT_TOKEN} # Set via .env file
    volumes:
      - /:/mnt/root